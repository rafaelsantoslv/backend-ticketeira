name: Deploy Backend for Ticketeira Unyx

on:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 17
      - name: Build project
        run: mvn clean install -DskipTests
      - name: List files in target folder
        run: ls -al target/
      - name: Login Docker Hub
        run: docker login -u ${{secrets.DOCKER_USERNAME}} -p ${{secrets.DOCKER_PASSWORD}}
      - name: Build docker image
        run: docker build -t rafaelsantoslv442/ticketeira .
      - name: Push image docker
        run: docker push rafaelsantoslv442/ticketeira

  deploy:
    needs: build
    runs-on: self-hosted
    steps:
      - name: Pull image from docker hub
        run: docker pull rafaelsantoslv442/ticketeira:latest
      - name: Remove docker container Running
        run: docker rm -f backend_ticketeira
      - name: Run docker container
        run: docker run -d -p 8080:8080 \
          -e DB_HOST=${{secrets.DB_HOST}} \
          -e DB_PORT=${{secrets.DB_PORT}} \
          -e DB_DATABASE=${{secrets.DB_DATABASE}} \
          -e DB_USERNAME=${{ secrets.DB_USERNAME }} \
          -e DB_PASSWORD=${{ secrets.DB_PASSWORD }} \
          -e JWT_SECRET=${{ secrets.JWT_SECRET }} \
          -e JWT_EXPIRATION=${{ secrets.JWT_EXPIRATION }} \
          -e AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }} \
          -e AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }} \
          -e AWS_REGION=${{ secrets.AWS_REGION }} \
          --name backend_ticketeira rafaelsantoslv442/ticketeira
          # Adicionando steps de verificação
      - name: Check if container is running
        run: docker ps | grep backend_ticketeira

      - name: Check files in container
        run: docker exec backend_ticketeira ls -la /app

      - name: Check container logs
        run: docker logs backend_ticketeira